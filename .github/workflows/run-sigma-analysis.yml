name: Run Sigma-Analysis

on:
  workflow_run:
    workflows: ["Run Sigma-Dynamics (REAL)"]
    types: [completed]

  workflow_dispatch:
    inputs:
      artifact_url:
        description: "URL API artifacts d'un run Dynamics (optionnel)"
        required: false
        default: ""

jobs:
  analyze:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install pandas matplotlib requests
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Compute OUT dir
        id: date
        run: echo "OUT=artifacts/$(date -u +%F)" >> $GITHUB_OUTPUT

      - name: Determine artifacts URL
        id: src
        run: |
          if [ "${{ github.event_name }}" = "workflow_run" ]; then
            echo "URL=${{ github.event.workflow_run.artifacts_url }}" >> $GITHUB_OUTPUT
          elif [ -n "${{ github.event.inputs.artifact_url }}" ]; then
            echo "URL=${{ github.event.inputs.artifact_url }}" >> $GITHUB_OUTPUT
          else
            echo "URL=" >> $GITHUB_OUTPUT
          fi

      - name: Download artifact from triggering run
        if: steps.src.outputs.URL != ''
        run: |
          mkdir -p dl
          curl -sSL -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
               -H "Accept: application/vnd.github+json" \
               "${{ steps.src.outputs.URL }}" > dl/list.json

          # Récupère la première URL d'artefact non expirée via jq (évite les heredocs YAML)
          ZIP_URL=$(jq -r '.artifacts[] | select(.expired==false) | .archive_download_url' dl/list.json | head -n1)

          if [ -z "$ZIP_URL" ] || [ "$ZIP_URL" = "null" ]; then
            echo "::error::Aucun artefact disponible/valide sur le run source."
            cat dl/list.json
            exit 1
          fi

          echo "Téléchargement de l'artefact: $ZIP_URL"
          curl -sSL -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
               -o dl/a.zip "$ZIP_URL"
          mkdir -p dl/unzipped
          unzip -oq dl/a.zip -d dl/unzipped

      - name: Locate sigma_dynamics.csv
        id: csv
        run: |
          mkdir -p "${{ steps.date.outputs.OUT }}"
          CSV=$(ls -1 dl/unzipped/**/sigma_dynamics.csv 2>/dev/null | head -n1 || true)

          if [ -z "$CSV" ] && [ -f "outputs/sigma_dynamics.csv" ]; then
            CSV="outputs/sigma_dynamics.csv"
          fi
          if [ -z "$CSV" ] && [ -f "artifacts/sigma_dynamics.csv" ]; then
            CSV="artifacts/sigma_dynamics.csv"
          fi

          if [ -z "$CSV" ]; then
            echo "::error::sigma_dynamics.csv introuvable. Relance avec 'artifact_url' en workflow_dispatch."
            exit 1
          fi

          echo "CSV_PATH=$CSV" >> $GITHUB_OUTPUT
          echo "Found CSV: $CSV"

      - name: Run analysis
        run: |
          python sigma_analysis.py \
            --csv "${{ steps.csv.outputs.CSV_PATH }}" \
            --out-dir "${{ steps.date.outputs.OUT }}"

      - name: Upload analysis artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sigma-analysis-${{ github.run_id }}
          path: ${{ steps.date.outputs.OUT }}
